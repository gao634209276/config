# base
unbind r
bind r source-file ~/.tmux.conf \; display-message "Config reloaded.."
# Relax!
set -sg escape-time 1
set -sg repeat-time 600

# clipboard
set -g set-clipboard on

# Mouse
# setw -g focus-events on
set -g mouse on

# monitor
setw -g monitor-activity on
set -g visual-activity on

# split
bind | split-window -h
bind - split-window -v

# https://github.com/tmux/tmux/issues/1021
# Mouse wheel scroll:
# if in non-alt-screen -> always enter/use copy mode. In alt screen, if the app
# registers "complex" mouse events (e.g. vim with set ttymouse=xterm2) - then
# passthrough the event, otherwise send up/down arrows. gnome-terminal sends
# up/down only if the app doesn't register any mouse events. To get that
# behavior, replace _button_ with _any_ at the mouse flags below.
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind-key -n WheelUpPane \
        if-shell -Ft= "#{?pane_in_mode,1,#{mouse_button_flag}}" \
            "send-keys -N3 -Mt=" \
            "if-shell -Ft= '#{alternate_on}' \
                'send-keys -N3 -t= Up' \
                'copy-mode -et=; send-keys -N3 -Mt='"

bind-key -n WheelDownPane \
   if-shell -Ft= "#{?pane_in_mode,1,#{?mouse_button_flag,1,#{?alternate_on,0,1}}}" \
       "send-keys -N3 -Mt=" \
           "send-keys -N3 -t= Down"

# Use Vi mode
setw -g mode-keys vi
set -g status-keys vi
bind-key Escape copy-mode
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel
bind-key p  paste-buffer


# Terminal junks!
# set -g default-terminal "tmux-256color"
set -g default-terminal 'screen-256color'
set-option -ga terminal-overrides ",*256col*:Tc"
set -g display-time 3000
set -g history-limit 65535

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
# bind-key -n 'j' if-shell "$is_vim" 'send-keys j'  'send-keys Down'
# bind-key -n 'k' if-shell "$is_vim" 'send-keys k'  'send-keys Up'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind l source-file ~/.tmux/mylayout
run-shell 'source /home/sankuai/.bashrc'
# run-shell 'source /home/sankuai/.bashrc_gaoyajun02'
# Plugin
setenv -g TMUX_PLUGIN_MANAGER_PATH '~/.tmux/plugins'
# https://gist.github.com/ryerh/14b7c24dfd623ef8edc7
# 使用插件 - via tpm
#   1. 执行 git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
#   2. 执行 bash ~/.tmux/plugins/tpm/bin/install_plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'seebi/tmux-colors-solarized'
set -g @plugin 'tmux-plugins/tmux-resurrect'
# set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'christoomey/vim-tmux-navigator'
# run '~/.tmux/plugins/tpm/tpm'                                   # Initialize TMUX plugin manager (keep bottom)
# neovim Tmuxline colors bug, so copy from: https://github.com/phongvcao/dotfiles/blob/master/home/tmux.conf
if-shell "test -f ~/.tmuxline.conf" "source ~/.tmuxline.conf"
if-shell "test -f ~/.tmuxline_custom.conf" "source ~/.tmuxline_custom.conf"
set -g @colors-solarized 'dark'
